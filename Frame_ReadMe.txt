






Frame_Tuxedo
    新增该目录，作为Tuxedo的自己使用的框架。
    
    
    
Frame_Shell
    新增一个可以排除源文件中未使用的变量。
    
    
    
Frame_Idea_SoftwareDevelopment
    该目录下，大部分均为我的之前的一些想法，现在看来这些想法都是不成熟的想法。
    
    
    
Frame_Multifunctional
->更新名字为
Frame_Multitool
    |-Bin_Text
        按照规定的格式，将变量的进行对齐补齐。（暂未实现）
        输出源文件中未使用的变量至指定文件 
        删除源文件中未使用的变量           
        输出源文件中的所有的函数至指定文件 
        输出头文件中的所有的函数至指定文件 
        


    Idea:
        新增可查看帮助的工具，使用配置文件的格式。
    
    
    

    
    
Frame_Lib
    
    


    Idea:
        将银联前置的内容日志的模块的内容添加到我的lib中来。
        新增可查看帮助的lib部分，可借鉴ceph、redis开源的部分。
        交易码 外转标、标转外、内转外 的部分，是否需要自己来编写一个。
        想一想，银联工作的那个平台，还有哪些是可以借鉴的部分。加入到我的库中来。
        redis的epoll的网络的部分，可以加入到我的lib中来。
        nginx模块化调用的方式，不太明白，个人觉得可以加入到我的lib中来。
        相关的socket的内容可以进行具体的配置在具体的配置文件中，然后做成代码生成器。
        
        







1、	【Frame_ThreadPool】

    1.1、	C
    路径： Frame_ThreadPool\C\Frame_ThreadPool
    
    
    V01版本说明：
    该版本中，比较粗糙的保留着通过fifo的方式，添加任务、解析任务。
    通过fifo的方式，没有测试过。
    
    V02该版本说明：
    将include中的代码移动到src/Lib目录下，在该目录下添加makefile。
    在src下添加Application的目录，并将应用层的代码application.h application.c移动到该目录下，在该目录下添加makefile。
    优化src目录下makefile的内容。
    去掉了fifo的方式，直接使用内存的方式，测试通过该框架可以正常使用。
    
    V03该版本说明：
    最近的版本，与外面调试的版本一直，如果外面的进行了优化，则需要贴进来。
    
    
    Frame_ThreadPool_bakcup_20190514该版本说明：
    需要将其中的单链表，改为双链表。双链表的好处是可以不用检索就可以找到首尾。这对于
    “生产者”在什么地方插入和“消费者”在什么取值，都不用检索找到位置。
    
    
    
    1.2、	C++
    
    
    1.3、	Java





2、	【Frame_Lib】

    2.1、	功能说明
    大的功能的文件，通过切分函数的方式 新增一些函数加入到lib中来。
    将自己写的各种的bin 用的函数，都加入到自己的lib中去。
    
    
    2.2、	路径
    日期20190611
    路径Frame_Lib\src\lib_FindFun，新增功能通过字符串形式的函数名 查询到函数的地址




3、	【UNIX网络编程--卷2进程间通信】

    自己读卷2，知识点，写代码demo来理解之。
    
    3.1、	分类2
    
    
    3.1.1、	分类3
    
    
    3.1.1.1、	分类4


4、	【bin_Multifunctional】
    4.1、	功能说明
    【多功能的bin文件】
    tab 空格处理bin的添加新的功能，这个bin的拓展为多功能的bin，各种自己想要的 功能都可以添加进来，为我所用。
    
    这个bin需要一个txt格式的说明文档，-h的参数说明中。
    
    
    4.2、	路径
    20190614
    E:\5技术理论与实践\bin_Multifunctional
    
    
    4.3、	新增想法
    
    1）根据 .c 生成 .h 的bin
    2）检查 .c .h 的函数名是否一直的
    3）自己添加注释的 bin
    4）各种的限制参数都能够打印出来
    5）各种的限制参数的修改，都有方法能够提供，打印出来给你现实，教你如何操作。
    6）makefile生成器？
    7）代码生成器
    8）解析8583报文的代码的bin
    可以选择 是否解析报文头 -- 对应具体的函数
    每一个域的各种标准的解法 选择--对应具体的函数
    9）组8583报文的代码bin
    可以选择 是否组报文头 -- 对应具体的函数
    每一个域的各种标准的组 选择--对应具体的函数
    10）grep 没用的脚本使用 bin启动，
    11）view 打开函数的脚本 使用bin启动
    12）.c文件 自动加入注释的部分，生成新的.c文件
    13）.c .h 文件对比检查，输出检查结果
    14）文件目录树的功能，保存在一个文件中
    15）去掉文件中所有的双斜杆的注释
    16）去掉文件中所有的斜线与双星号的注释
    17）去掉文件中所有的斜线与双星号、双斜杆的注释
    18）删除文件中所有的tab空行
    19）删除文件中所有的空格空行
    20）删除文件中所有的只有换行符号的空行   
    21）删除文件中所有的空行（包括tab空行、空格空行、只有换行符号的空行）
    22）未使用的变量，自动删除的功能
    








